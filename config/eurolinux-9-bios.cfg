# EuroLinux 9 Kickstart
# for Build Smallest (but a little optimized for Japanese) Configuration
# Version 0.1
# 
# Requirement:
#  - BIOS boot (not UEFI boot!)
#  - Install disk is attached with NVMe Interface
# 
# Optimized for Japanese:
#  - Timesource (NTP) is NICT, Japan
#  - Includes "glibc-langpack-ja" package.
#    To be able to use on RHEL9, adds 1 configuration file
# 
# Author: Yutenji (yuta@59RY.jp, https://github.com/59RY)
# 
# If this kickstart works collectly, by now,
# this kickstart is published at GitHub:
#  - https://github.com/59RY/MyLinuxKickstart
# 
# In AWS Tokyo (ap-northeast-1) region,
# you can find AMIs used this kickstart from here:
#  - https://ap-northeast-1.console.aws.amazon.com/ec2/home?region=ap-northeast-1#Images:visibility=public-images;owner=708780754938;search=:EuroLinux;v=3
# Appeal: You can create more small volumes than official AMIs. (Starts from 2 GiB!)

# Use text mode install
text

# Keyboard layouts
keyboard --xlayouts='us'

# System language
lang en_US.UTF-8

# (Not write a network information because of auto configuration)

# NTP
timesource --ntp-pool=ntp.nict.jp
timesource --ntp-pool=ntp.jst.mfeed.ad.jp

# System timezone
timezone Etc/UTC --utc

# Use network installation
#   (This is required. Without this, netinst won't work)
#   (If this link is broken,
#    try "https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/BaseOS/os" instead)
url --url="https://mirror-us1.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/BaseOS/os"

# Not select any packages at this section.
# Install necessary packages at %post section instead.
#   (If specify these here, the required disk space will increase.
#    This kickstart is made for distribute smallest images to cloud,
#    so adds packages here is never option)
%packages
%end

# Run the Setup Agent on first boot
firstboot --disable

# Configure how to use the disk.
# This is generated using Blivet version 3.4.0
ignoredisk --only-use=nvme0n1
clearpart --none --initlabel
part / --fstype="xfs" --ondisk=nvme0n1 --grow

# Add-on
%addon com_redhat_kdump --disable
%end

# Root password
#   (it's tentative, so this password will be deleted in the end)
rootpw --plaintext euro-euro

# Disable firewalld
firewall --disabled

# Post-Installation Script
%post

# Remove unnecessary packages
#   (May be mixed for aarch64 and x86_64.
#    Some packages aren't installed already, but it's okay)
dnf remove -y iptables iptables-libs nftables firewalld* NetworkManager-team NetworkManager-tui iwl* dracut-config-rescue dracut-network dracut-squash ethtool dejavu-sans-fonts linux-firmware linux-firmware-whence dmidecode dosfstools gawk-all-langpacks geolite2-city geolite2-country lsfw lsscsi mdadm nspr nss nss-util

# Remove the rescue ram
#   (to reduce more disk usage.
#    See also if you want to restore:
#    https://github.com/59RY/MyLinuxKickstart/blob/main/related/rhel9family-notice.md)
RESCUENAME=`ls /boot/vmlinuz-0-rescue-*`
grubby --remove-kernel=$RESCUENAME
rm --force /boot/initramfs-0-rescue-*.img
rm --force /boot/vmlinuz-0-rescue-*

# Re-enable locale-related environment variables on SSH
#   (to use Japanese Locale)
touch /etc/ssh/sshd_config.d/50-languages.conf
echo '# Accept locale-related environment variables' > /etc/ssh/sshd_config.d/50-languages.conf
echo 'AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT LC_IDENTIFICATION LC_ALL LANGUAGE XMODIFIERS' >> /etc/ssh/sshd_config.d/50-languages.conf
chmod 600 /etc/ssh/sshd_config.d/50-languages.conf
chown root:root /etc/ssh/sshd_config.d/50-languages.conf

# Install necessary packages
dnf install -y cloud-init cloud-utils-growpart dracut-config-generic glibc-langpack-ja bash-completion --nogpgcheck --exclude=geolite*,lsfw

# Edit Configuration about cloud-init
sed -i -e 's!name: cloud-user!name: eurolinux!' /etc/cloud/cloud.cfg
sed -i -e 's!gecos: Cloud User!gecos: EuroLinux!' /etc/cloud/cloud.cfg
sed -i -e 's!gecos: eurolinux Cloud User!gecos: EuroLinux!' /etc/cloud/cloud.cfg

# Regenerate initramfs
KERNELVER=`ls /boot/vmlinuz-* | cut -c 15-`
dracut -f --kver $KERNELVER

# Enable SSH
#   (It's actually automatically enabled by cloud-init, but do it carefully)
systemctl enable sshd

# Cleanup
#   (Almost all logs will be deleted
#    because of distribution images such as AWS AMIs.
#    If you want to see logs, comment this section)
dnf clean all
rm -rf /var/lib/dnf/history*
find /var/log/ -type f -name \* -not -name 'README' -exec cp -f /dev/null {} \;
rm --force /var/log/vmware*
rm --force /var/log/dnf*
rm --force /var/log/anaconda*
rm --force /root/.bash_history 
rm --force /root/.bash_logout
rm --force /root/anaconda-ks.cfg

# Delete root password
passwd --delete root

# Zerofill free space
#   (to shrink the snapshot size)
#   (I know it's dangerous action, so remains a few megabytes)
FREEMB=`df -m -P /dev/nvme0n1p2 | awk 'NR==2 {print $4}'`
ZEROFILL=`expr $FREEMB - 3`
dd if=/dev/zero of=/zerofill bs=1M count=$ZEROFILL
rm --force /zerofill
%end